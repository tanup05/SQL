Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table =  10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10000
vi. Checkin = 493
vii. Photo = 10000
viii. Tip = 537 (Foreign Key: user_id)
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: NO
	
	SQL code used to arrive at answer:

	SELECT COUNT(*)
	FROM user
	WHERE id IS NULL OR 
	  name IS NULL OR 
	  review_count IS NULL OR 
	  yelping_since IS NULL OR
	  useful IS NULL OR 
	  funny IS NULL OR 
	  cool IS NULL OR 
	  fans IS NULL OR 
	  average_stars IS NULL OR 
	  compliment_hot IS NULL OR 
	  compliment_more IS NULL OR 
	  compliment_profile IS NULL OR 
	  compliment_cute IS NULL OR 
	  compliment_list IS NULL OR 
	  compliment_note IS NULL OR 
	  compliment_plain IS NULL OR 
	  compliment_cool IS NULL OR 
	  compliment_funny IS NULL OR 
	  compliment_writer IS NULL OR 
	  compliment_photos IS NULL;
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

#SQL code for finding Minimum: 
	SELECT MIN(column)
	FROM Table;
	
#SQL code for finding Maximum: 
	SELECT MAX(column)
	FROM Table;

#SQL code for finding Mean: 
	SELECT AVG(column)
	FROM Table;	

	i. Table: Review, Column: Stars
	
		min:	1	max:	5	avg:	3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:	1.0	max:	5.0	avg:	 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg:	0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg:	1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000	avg:	24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	
	SELECT city as Cities
	, SUM(review_count) as Reviews
	FROM business
	GROUP BY Cities
	ORDER BY Reviews DESC;
	
	
	Copy and Paste the Result Below:
	
	+-----------------+---------+
	| Cities          | reviews |
	+-----------------+---------+
	| Las Vegas       |   82854 |
	| Phoenix         |   34503 |
	| Toronto         |   24113 |
	| Scottsdale      |   20614 |
	| Charlotte       |   12523 |
	| Henderson       |   10871 |
	| Tempe           |   10504 |
	| Pittsburgh      |    9798 |
	| Montréal        |    9448 |
	| Chandler        |    8112 |
	| Mesa            |    6875 |
	| Gilbert         |    6380 |
	| Cleveland       |    5593 |
	| Madison         |    5265 |
	| Glendale        |    4406 |
	| Mississauga     |    3814 |
	| Edinburgh       |    2792 |
	| Peoria          |    2624 |
	| North Las Vegas |    2438 |
	| Markham         |    2352 |
	| Champaign       |    2029 |
	| Stuttgart       |    1849 |
	| Surprise        |    1520 |
	| Lakewood        |    1465 |
	| Goodyear        |    1155 |
	+-----------------+---------+
	(Output limit exceeded, 25 of 362 total rows shown)
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

	SELECT stars
	, SUM(review_count) as reviews
	FROM business
	WHERE city = 'Avon'
	GROUP BY stars;

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

	+-------+---------+
	| stars | reviews |
	+-------+---------+
	|   1.5 |      10 |
	|   2.5 |       6 |
	|   3.5 |      88 |
	|   4.0 |      21 |
	|   4.5 |      31 |
	|   5.0 |       3 |
	+-------+---------+

ii. Beachwood

SQL code used to arrive at answer:

	SELECT stars
	, SUM(review_count) as reviews
	FROM business
	WHERE city = 'Beachwood'
	GROUP BY stars;

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
		
	+-------+---------+
	| stars | reviews |
	+-------+---------+
	|   2.0 |       8 |
	|   2.5 |       3 |
	|   3.0 |      11 |
	|   3.5 |       6 |
	|   4.0 |      69 |
	|   4.5 |      17 |
	|   5.0 |      23 |
	+-------+---------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
	SELECT name
	, sum(review_count) as review
	FROM user
	GROUP BY name
	ORDER BY review DESC
	LIMIT 3;
		
	Copy and Paste the Result Below:
	
	+--------+--------+
	| name   | review |
	+--------+--------+
	| Nicole |   2397 |
	| Sara   |   2253 |
	| Gerald |   2034 |
	+--------+--------+


8. Does posing more reviews correlate with more fans?

   Please explain your findings and interpretation of the results:
	
	Yes, posing reviews correlate with fans. As you could see the general trend shows that
	the greater count of reviews posed by the users are related to greater count of fans.
	
	SELECT name
	, fans
	, review_count
	FROM user
	order by fans desc;
	
   Output:
   
	+-----------+------+--------------+
	| name      | fans | review_count |
	+-----------+------+--------------+
	| Amy       |  503 |          609 |
	| Mimi      |  497 |          968 |
	| Harald    |  311 |         1153 |
	| Gerald    |  253 |         2000 |
	| Christine |  173 |          930 |
	| Lisa      |  159 |          813 |
	| Cat       |  133 |          377 |
	| William   |  126 |         1215 |
	| Fran      |  124 |          862 |
	| Lissa     |  120 |          834 |
	| Mark      |  115 |          861 |
	| Tiffany   |  111 |          408 |
	| bernice   |  105 |          255 |
	| Roanna    |  104 |         1039 |
	| Angela    |  101 |          694 |
	| .Hon      |  101 |         1246 |
	| Ben       |   96 |          307 |
	| Linda     |   89 |          584 |
	| Christina |   85 |          842 |
	| Jessica   |   84 |          220 |
	| Greg      |   81 |          408 |
	| Nieves    |   80 |          178 |
	| Sui       |   78 |          754 |
	| Yuri      |   76 |         1339 |
	| Nicole    |   73 |          161 |
	+-----------+------+--------------+
	(Output limit exceeded, 25 of 10000 total rows shown)

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
	
	Reviews with the word 'Love' => 1780
	Reviews with the word 'Hate' => 232
	
	SQL code used to arrive at answer:

	#Reviews with the word 'Love' =>
	
	SELECT COUNT(*)
	FROM review
	WHERE UPPER(text) LIKE '%LOVE%';
	
	#Reviews with the word 'Hate' =>
	
	SELECT COUNT(*)
	FROM review
	WHERE UPPER(text) LIKE '%HATE%';
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
	SELECT name
	, fans
	FROM user
	ORDER BY fans DESC
	LIMIT 10;
	
	Copy and Paste the Result Below:

	+-----------+------+
	| name      | fans |
	+-----------+------+
	| Amy       |  503 |
	| Mimi      |  497 |
	| Harald    |  311 |
	| Gerald    |  253 |
	| Christine |  173 |
	| Lisa      |  159 |
	| Cat       |  133 |
	| William   |  126 |
	| Fran      |  124 |
	| Lissa     |  120 |
	+-----------+------+
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
	I chose to pick the Food businesses in the city of Toronto.
	It was observed that the 4-5 star group seems to have shorter hours then the 2-3 star group.
	Also, the 2-3 star group businesses tended to be open in the morning (usually during 8:00-22:00)
	while the 4-5 star group businesses tended to be open in the evening till late night (usually after 16:00)
	
ii. Do the two groups you chose to analyze have a different number of reviews?
        Yes, the 4-5 star group have different number of reviews as compared to the 2-3 star group. However, the review count is more or less in the same range.
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
	 Yes. The 2-3 star group reviews come from the same business location i.e from a specific business place. While 4-5 star groups have different location.

SQL code used for analysis:

	SELECT b.name
	, b.review_count
	, h.hours
	, b.address
	, CASE
		WHEN b.stars BETWEEN 2 AND 3 THEN '2-3 stars'
		WHEN b.stars BETWEEN 4 AND 5 THEN '4-5 stars'
	  END AS Star_Ratings
	, CASE
		WHEN LOWER(hours) LIKE "%monday%" THEN 'Mon'
		WHEN LOWER(hours) LIKE "%tuesday%" THEN 'tue'
		WHEN LOWER(hours) LIKE "%wednesday%" THEN 'wed'
		WHEN LOWER(hours) LIKE "%thursday%" THEN 'thurs'
		WHEN LOWER(hours) LIKE "%friday%" THEN 'fri'
		WHEN LOWER(hours) LIKE "%saturday%" THEN 'sat'
		WHEN LOWER(hours) LIKE "%sunday%" THEN 'sun'
	 END AS day
	FROM business as b INNER JOIN hours as h
	ON b.id = h.business_id
	INNER JOIN category as c
	ON c.business_id = b.id
	WHERE (b.city == 'Toronto'
	AND
	c.category LIKE 'Food')
	AND
	(Star_Ratings = '2-3 stars'
	OR
	Star_Ratings = '4-5 stars')
	GROUP BY day, b.stars
	ORDER BY Star_Ratings ASC;	
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
   
   The mean review_count for the businesses that are open => 31.75707
   The mean review_count for the businesses that are closed => 23.19802
         
ii. Difference 2:
         
    The mean star ratings for the businesses that are open => 3.6790
    The mean star ratings for the businesses that are closed => 3.5203     
         
SQL code used for analysis:

SELECT COUNT(DISTINCT(id)) as number_of_businesses
, AVG(review_count) as avg_review_count
, AVG(stars) as avg_star
, is_open
FROM business
GROUP BY is_open;
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

	The data here is a rich variety of the ratings,comments and metadata of businesses. So, I'll be predicting the sentiment of the dataset. 
	I would be parsing out the keywords and business attributes for sentiment analysis of the Yelp dataset. It would be difficult 
	to thoroughly analyze the text of the reviews, but it would be as detailed as possible.
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
                           
	It is significant for businesses to understand the importance of different factors which
	will help them understand the sentiment of the customers. Some data that maybe important; count of reviews, star ratings of the business,
	where the business is based (city). Other significant factors to be considered are the category of businesses for which the reviews have been given and 
	the types of reviews that have been given by the customers (negative or positive). You'll notice that the review types correspond to the star ratings of the customer.
	The review texts have been classified into positive and negative comments based on the small 'word bank' created which checks whether the review text has those
	specific words and then classifies it accordingly.
	
	So in this dataset you will see the following things:
	
	--Distribution of ratings across various businesses
	--Popular business categories
	--Analyzing various locations of these businesses (City)
	--Classification according to the number of reviews received.
	--Recognizing the type of review to analyze the sentiment. That is, whether the review is positive or negative.

		  
iii. Output of your finished dataset:

+------------------------+-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------+------------+-------------+
| id                     | stars | category                                                                                                                                                                       | review_count | city       | review_type |
+------------------------+-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------+------------+-------------+
| 2skQeu3C36VCiB653MIfrw |   4.0 | Breakfast & Brunch,Restaurants,Nightlife,Bars,Food,Smokehouse,American (Traditional),Barbeque                                                                                  |           25 | Phoenix    | positive    |
| 1veVZUawy7IhIc5oDpRRQA |   4.5 | Shopping,Food,Seafood Markets,Fruits & Veggies,Ethnic Food,Market Stalls,Farmers Market,Specialty Food,Public Markets,Meat Shops,Sandwiches,American (Traditional),Restaurants |           23 | Cleveland  | positive    |
| 1ZnVfS-qP19upP_fwOhZsA |   4.0 | Noodles,Malaysian,Soup,Taiwanese,Chinese,Restaurants,Asian Fusion                                                                                                              |           14 | Las Vegas  | positive    |
| 20ib4z2Yo2wlfARFMcFwSQ |   4.5 | Music Venues,Arts & Entertainment,Nightlife,Desserts,Food                                                                                                                      |            5 | Pittsburgh | positive    |
| 0NDbUCHi9YsRwgG3iZO8Kg |   3.5 | Pakistani,Indian,Restaurants                                                                                                                                                   |            3 | Aurora     | positive    |
| -Za5mjo-CYYUMsd1r8GC7Q |   3.5 | Active Life,Beaches,Parks                                                                                                                                                      |            3 | Toronto    | negative    |
+------------------------+-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------+------------+-------------+
         
         
iv. Provide the SQL code you used to create your final dataset:

SELECT DISTINCT b.id
, b.stars
, GROUP_CONCAT(DISTINCT c.category) AS category
, COUNT(b.review_count) as review_count
, b.city
--, r.text
, CASE
  WHEN UPPER(r.text) LIKE "%DISLIKE%" OR UPPER(r.text) LIKE "%BAD%" OR UPPER(r.text) LIKE "%TERRIBLE%" OR UPPER(r.text) LIKE "%NASTY%" THEN "negative"
  WHEN UPPER(r.text) LIKE "%BEST%" OR UPPER(r.text) LIKE "%LIKE%" OR UPPER(r.text) LIKE "%GREAT%" OR UPPER(r.text) LIKE "%NICE" THEN "positive"
END AS review_type
FROM business as b 
INNER JOIN review as r
  ON b.id = r.business_id
INNER JOIN category as c
  ON b.id = c.business_id
GROUP BY b.city
ORDER BY review_count DESC;